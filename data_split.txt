import torchvision
import torch

from glob import glob
img_list = glob('C:\\Users\\PC\\yolo\\dataset\\images\\*.jpg')
print(len(img_list))

from sklearn.model_selection import train_test_split
train_img_list, val_img_list = train_test_split(img_list, test_size=0.2, random_state=2000)
print(len(train_img_list), len(val_img_list))

from sklearn.model_selection import train_test_split
train_img_list, val_img_list = train_test_split(img_list, test_size=0.3, random_state=500)
print(len(train_img_list), len(val_img_list))

with open('C:\\Users\\PC\\yolo\\dataset\\train.txt', 'w') as f:
  f.write('\n'.join(train_img_list) + '\n')

with open('C:\\Users\\PC\\yolo\\dataset\\val.txt', 'w') as f:
  f.write('\n'.join(val_img_list) + '\n')

import yaml
with open('C:\\Users\\PC\\yolo\\yolov5\\data\\cardetect.yaml', 'r') as f:
  data = yaml.safe_load(f)

print(data)

data['train'] = 'C:\\Users\\PC\\yolo\\dataset\\train.txt'
data['val'] = 'C:\\Users\\PC\\yolo\\dataset\\val.txt'

with open('C:\\Users\PC\\yolo\\yolov5\data\\cardetect.yaml', 'w') as f:
  yaml.dump(data, f)

print(data)


pip install matplotlib tqdm opencv-python pillow PyYAML scipy tensorboard



img_list = glob('C:\\Users\\PC\\yolo\\dataset\\images\\*.jpg')
print(len(img_list))


train_img_list, val_img_list = train_test_split(img_list, test_size=0.2, random_state=2000)
print(len(train_img_list), len(val_img_list))


with open('C:\\Users\\PC\\yolo\\dataset\\train.txt', 'w') as f:
  f.write('\n'.join(train_img_list) + '\n')

with open('C:\\Users\\PC\\yolo\\dataset\\val.txt', 'w') as f:
  f.write('\n'.join(val_img_list) + '\n')
  
  # 트레인과 벨리데이션 할 텍스트 파일 생성.
  
import yaml

with open('C:\\Users\\PC\\yolo\\yolov5\\data\\cardetect.yaml', 'r') as f:
    data = yaml.load(f)
    
print(data)

data['train'] = 'C:\\Users\\PC\\yolo\\dataset\\train.txt'
data['val'] = 'C:\\Users\\PC\\yolo\\dataset\\val.txt'

with open('C:\\Users\\PC\\yolo\\yolov5\\data\\cardetect.yaml', 'w') as f:
    yaml.dump(data, f)
    
print(data)
